(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{575:function(t,s,n){"use strict";n.r(s);var a=n(6),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"计算属性computed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#计算属性computed"}},[t._v("#")]),t._v(" 计算属性computed")]),t._v(" "),n("p",[t._v("当页面渲染刷新的时候才会执行")]),t._v(" "),n("p",[t._v("为什么不使用method？")]),t._v(" "),n("p",[t._v("因为使用method的话，页面更新的时候，会重新渲染一遍这个method，加大负荷，不符合diff算法。")]),t._v(" "),n("p",[t._v("computed 和 method都能实现的功能，建议使用computed，因为有缓存，不用渲染页面就刷新")]),t._v(" "),n("h3",{attrs:{id:"侦听器-监听器-watch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#侦听器-监听器-watch"}},[t._v("#")]),t._v(" 侦听器（监听器）watch")]),t._v(" "),n("p",[t._v("当数据更新的时候会执行")]),t._v(" "),n("p",[t._v("computed 和 watch都能实现的功能，建议使用computed，因为更简洁")]),t._v(" "),n("div",{staticClass:"language-vue line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-vue"}},[n("code",[t._v("// count是以数据为名\ndata(){\n\treturn {\n\t\tcount:0\n\t}\n},\nwatch:{\n\tcount(current,prev){\n\t\tconsole.log('现在的值',current)\n\t\tconsole.log('以前的值',prev)\n\t}\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);