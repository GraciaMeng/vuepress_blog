(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{554:function(t,s,a){"use strict";a.r(s);var e=a(6),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("git init 初始化仓库")]),t._v(" "),a("p",[t._v("git status 查看当前仓库的状态信息")]),t._v(" "),a("p",[t._v("git add <filename> 即将该单个文件加入暂存区")]),t._v(" "),a("p",[t._v("git add . 将所有修改文件加入暂存区")]),t._v(" "),a("p",[t._v("git commit -m <message> 提交并添加描述")]),t._v(" "),a("p",[t._v("git log 查看日志")]),t._v(" "),a("h1",{attrs:{id:"回退-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回退-reset"}},[t._v("#")]),t._v(" 回退 reset")]),t._v(" "),a("p",[t._v("git reset <arg>")]),t._v(" "),a("ul",[a("li",[t._v("<filename> add 一个文件但是后悔了，本次提交不应有他，在 commit 之前使用")]),t._v(" "),a("li",[t._v("<commitId>退回版本\n"),a("ul",[a("li",[t._v("--hard 不保存所有变更 （删除工作空间改动代码，撤销commit，撤销git add .）")]),t._v(" "),a("li",[t._v("--soft 保留变更且变更内容处于 Staged （不删除工作空间改动代码，撤销commit，不撤销git add . ）")]),t._v(" "),a("li",[t._v("--mixed 保留变更内容且变更内容处于 Modified （不删除工作空间改动代码，撤销commit，并且撤销git add . 操作）")])])]),t._v(" "),a("li",[t._v("如果后悔想回到最新的 commit？可以 git reflog 查看所有，再次使用 git reset")]),t._v(" "),a("li",[a("strong",[t._v("git reset --soft HEAD^")])]),t._v(" "),a("li",[t._v("HEAD^的意思是上一个版本，也可以写成HEAD~1，如果你进行了2次commit，想都撤回，可以使用HEAD~2。")]),t._v(" "),a("li",[a("strong",[t._v("git commit --amend")]),t._v(" 修改commit信息")])]),t._v(" "),a("p",[t._v("alias")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("gitconig文件\n[alias]\n\tad = add .\n\tcmm = commit -m\n\tlg = log\n\trlg = reflog\n\tco = checkout\n\tcob = checkout -b\n\tcod = checkout develog\n\tcom = checkout master\n\tfc = fetch\n\tcm = commit\n\tst = status\n\tpl = pull\n\tps = push\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h1",{attrs:{id:"分支-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支-branch"}},[t._v("#")]),t._v(" 分支 branch")]),t._v(" "),a("p",[t._v("git checkout -b <name> <template>")]),t._v(" "),a("ul",[a("li",[t._v("name 是新分支名字")]),t._v(" "),a("li",[t._v("template 是指以哪个分支或者 commit 为模板，不填则以当前分支为模板")]),t._v(" "),a("li",[t._v("如果 template 不是本地的，是来自远程仓库的话，需要在 template 前加个 origin")])]),t._v(" "),a("p",[t._v("git branch 查看所有分支")]),t._v(" "),a("p",[t._v("git checkout <branchName> 切换分支")]),t._v(" "),a("h1",{attrs:{id:"合并-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并-merge"}},[t._v("#")]),t._v(" 合并 merge")]),t._v(" "),a("p",[t._v("git merge <branchName> 合并分支")]),t._v(" "),a("h1",{attrs:{id:"远程仓库-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库-remote"}},[t._v("#")]),t._v(" 远程仓库 remote")]),t._v(" "),a("p",[t._v("git clone <url>")]),t._v(" "),a("p",[t._v("git push")]),t._v(" "),a("p",[t._v("git push --set-upstream origin <本地分支> 将远程仓库分支作为本地分支的上流分支")]),t._v(" "),a("ul",[a("li",[t._v("--set-upstream 指设置上流分支")]),t._v(" "),a("li",[t._v("origin 远端仓库")])]),t._v(" "),a("p",[t._v("git fetch 拉取远程仓库信息")]),t._v(" "),a("p",[t._v("git pull 等同于 git fetch + git merge")]),t._v(" "),a("h1",{attrs:{id:"变基-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变基-rebase"}},[t._v("#")]),t._v(" 变基 rebase")]),t._v(" "),a("p",[t._v("git rebase <branchName>")]),t._v(" "),a("ul",[a("li",[t._v("--continue 继续下一 commit 节点的 rebase")])]),t._v(" "),a("h1",{attrs:{id:"解决冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[t._v("#")]),t._v(" 解决冲突")]),t._v(" "),a("p",[t._v("先把自己的")]),t._v(" "),a("p",[t._v("git add .")]),t._v(" "),a("p",[t._v("git commit -m 'xxx'")]),t._v(" "),a("p",[t._v("然后")]),t._v(" "),a("p",[t._v("git pull origin master")]),t._v(" "),a("p",[t._v("再重新 git add commit 操作")]),t._v(" "),a("h1",{attrs:{id:"简写命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简写命令"}},[t._v("#")]),t._v(" 简写命令")]),t._v(" "),a("p",[t._v("cmd中git config --global -e打开 .gitconfig")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 在后面添加\n[alias]\n\tst = status\n\tco = checkout\n\tci = commit\n\tcm = commit -m\n\tca = commit -a\n\tps = push\n\tbr = branch\n\tmg = merge\n\tcf = config\n\tl = log\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);